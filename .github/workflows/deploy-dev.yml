name: deploy-dev
on:
  push:
    branches: 
      - deploy-dev
  pull_request:
    branches: 
      - deploy-dev

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CONTAINER_NAME: account

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: SSH to EC2
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: replace

      - name: Deploy to AWS EC2
        run: 
          ssh -o 'StrictHostKeyChecking=no' ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}
          "docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          && docker pull ${{ steps.meta.outputs.tags }}
          && docker stop ${{ env.CONTAINER_NAME }}
          && docker rm ${{ env.CONTAINER_NAME }}
          && docker run --name ${{ env.CONTAINER_NAME }} --network host -d --restart unless-stopped ${{ steps.meta.outputs.tags }}"

